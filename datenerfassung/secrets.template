"""
Konfigurationsdatei mit weiteren Parametern, die nicht unter die
Git-Versionskontrolle fallen sollen (Secret keys etc.)
"""

import os
import ldap
from django_auth_ldap.config import LDAPSearch, GroupOfNamesType
from datenerfassung.settings import BASE_DIR

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'abcdefghijklmnopqrstuvwxyz0123456789-#(!$&%abcdefg'


ALLOWED_HOSTS = ['abc', '1.2.3.4', 'localhost', '127.0.0.1', '::1']

TEMPLATES = [
  {
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [
      '/absolute/path/to/templates/folder'
    ],
    'APP_DIRS': True,
    'OPTIONS': {
      'context_processors': [
        'django.template.context_processors.debug',
        'django.template.context_processors.request',
        'django.contrib.auth.context_processors.auth',
        'django.contrib.messages.context_processors.messages',
        'datenerfassung.context_processors.datenmanagement_version',
        'datenerfassung.context_processors.address_search_key',
        'datenerfassung.context_processors.include_login_form',
      ],
      'libraries': {
          'datenmanagement_tags': 'datenmanagement.tags.tags'
      },
    },
  },
]


# Database

DATABASES = {
  'default': {
    'ENGINE': 'django.contrib.gis.db.backends.postgis',
    'NAME': 'datenerfassung',
    'OPTIONS': {
      'options': '-c search_path=django,public'
    },
    'USER': 'user',
    'PASSWORD': 'password',
    'HOST': '127.0.0.1',
    'PORT': '5432',
  }
}

POSTGIS_VERSION = (2, 5, 2)


# Authentication

AUTHENTICATION_BACKENDS = (
  'django_auth_ldap.backend.LDAPBackend',
  'django.contrib.auth.backends.ModelBackend',
  'guardian.backends.ObjectPermissionBackend',
)

AUTH_LDAP_GLOBAL_OPTIONS = {
  ldap.OPT_X_TLS_REQUIRE_CERT: ldap.OPT_X_TLS_NEVER       
}

AUTH_LDAP_SERVER_URI = 'ldaps://127.0.0.1'

AUTH_LDAP_BIND_DN = ''

AUTH_LDAP_BIND_PASSWORD = ''

AUTH_LDAP_ALWAYS_UPDATE_USER = True

AUTH_LDAP_GROUP_SEARCH = LDAPSearch(
  'ou=Abteilung,ou=Amt,o=Stadt',
  ldap.SCOPE_SUBTREE,
  '(objectClass=groupOfNames)'
)

AUTH_LDAP_GROUP_TYPE = GroupOfNamesType()

AUTH_LDAP_REQUIRE_GROUP = 'cn=Gruppe,ou=Abteilung,ou=Amt,o=Stadt'

AUTH_LDAP_USER_SEARCH = LDAPSearch(
  'o=Stadt',
  ldap.SCOPE_SUBTREE,
  '(uid=%(user)s)'
)

AUTH_LDAP_USER_ATTR_MAP = {
  'first_name': 'givenName',
  'last_name': 'sn',
  'email': 'mail'
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/datenerfassung/static/'

STATIC_ROOT = '/absolute/path/to/static/folder'

STATICFILES_DIRS = (
  os.path.join(BASE_DIR, 'assets/'),
  ('hilfe', os.path.join(BASE_DIR, 'hilfe/build/html')),
)


# Upload

MEDIA_URL = '/datenerfassung/uploads/'

MEDIA_ROOT = '/absolute/path/to/upload/folder'

PDF_PATH_PREFIX_PUBLIC = 'public/pdf/'

PDF_PATH_PREFIX_PRIVATE = 'private/pdf/'

PHOTO_PATH_PREFIX_PUBLIC = 'public/photos/'

PHOTO_PATH_PREFIX_PRIVATE = 'private/photos/'


# Address search

ADDRESS_SEARCH_URL = 'https://geo.sv.rostock.de/geocodr/query?'

ADDRESS_SEARCH_KEY = 'abcdefghijklmnopqrstuvwxyz012345'


# OWS proxy

OWS_BASE = 'https://geo.sv.rostock.de/geodienste'
