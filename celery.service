[Unit]
Description=Celery Service
After=network.target

[Service]
Type=forking
# User and group of apache
User=wwwrun
Group=www
# Environment variables
# load django settings for celery
Environment="DJANGO_SETTINGS_MODULE=datenwerft.settings"
# path to celery binary
Environment="CELERY_BIN=/srv/www/htdocs/datenwerft/virtualenv/bin/celery"
# celery app name, as defined in the django project
Environment="CELERY_APP=datenwerft"
# celery worker node name
Environment="CELERYD_NODES=w1"
# optional parameters
Environment="CELERYD_OPTS=--time-limit=300 --concurrency=8"
# celerys log and run directories
# user must own these directories
Environment="CELERYD_PID_FILE=/var/run/celery/%n.pid"
Environment="CELERYD_LOG_FILE=/var/log/celery/%n%I.log"
# celery log level
Environment="CELERYD_LOG_LEVEL=INFO"
# Working directory of celery (same directory in which manage.py is located).
WorkingDirectory=/srv/www/htdocs/datenwerft/datenwerft
# Run/stop/reload commands for celery worker
ExecStart=/bin/sh -c '${CELERY_BIN} -A $CELERY_APP multi start $CELERYD_NODES \
        --pidfile=${CELERYD_PID_FILE} \
        --logfile=${CELERYD_LOG_FILE} \
        --loglevel="${CELERYD_LOG_LEVEL}" $CELERYD_OPTS'
ExecStop=/bin/sh -c '${CELERY_BIN} multi stopwait $CELERYD_NODES \
    --pidfile=${CELERYD_PID_FILE} \
        --logfile=${CELERYD_LOG_FILE} \
    --loglevel="${CELERYD_LOG_LEVEL}"'
ExecReload=/bin/sh -c '${CELERY_BIN} -A $CELERY_APP multi restart $CELERYD_NODES \
    --pidfile=${CELERYD_PID_FILE} \
        --logfile=${CELERYD_LOG_FILE} \
    --loglevel="${CELERYD_LOG_LEVEL}" $CELERYD_OPTS'
# Restart service after 5 seconds if the service crashes
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target