# Generated by Django 4.2 on 2023-04-11 12:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bemas', '0002_auto_20230331_1408'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellung')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='letzte Änderung')),
                ('function', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Texte dürfen keine Akute (´) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*´).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Schreibmaschinensatz-Anführungszeichen (") enthalten. Stattdessen müssen die typographisch korrekten Anführungszeichen („“) verwendet werden.', regex='^(?!.*\\").*$'), django.core.validators.RegexValidator(message="Texte dürfen keine einfachen Schreibmaschinensatz-Anführungszeichen (') enthalten. Stattdessen muss der typographisch korrekte Apostroph(’) verwendet werden.", regex="^(?!.*\\').*$"), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Leerzeichen und/oder Zeilenumbrüche enthalten.', regex='^(?!.*  ).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine Gravis (`) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*`).*$')], verbose_name='Funktion')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bemas.organization', verbose_name='Organisation')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bemas.person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Ansprechpartner:in',
                'verbose_name_plural': 'Ansprechpartner:innen',
                'db_table': 'contact',
                'ordering': ['organization__name', 'person__last_name', 'person__first_name'],
                'get_latest_by': 'updated_at',
                'abstract': False,
            },
        ),
    ]
